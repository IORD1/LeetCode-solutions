Table: Transactions

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| country       | varchar |
| state         | enum    |
| amount        | int     |
| trans_date    | date    |
+---------------+---------+
id is the primary key of this table.
The table has information about incoming transactions.
The state column is an enum of type ["approved", "declined"].
 

Write an SQL query to find for each month and country, the number of transactions and their total amount, the number of approved transactions and their total amount.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Transactions table:
+------+---------+----------+--------+------------+
| id   | country | state    | amount | trans_date |
+------+---------+----------+--------+------------+
| 121  | US      | approved | 1000   | 2018-12-18 |
| 122  | US      | declined | 2000   | 2018-12-19 |
| 123  | US      | approved | 2000   | 2019-01-01 |
| 124  | DE      | approved | 2000   | 2019-01-07 |
+------+---------+----------+--------+------------+
Output: 
+----------+---------+-------------+----------------+--------------------+-----------------------+
| month    | country | trans_count | approved_count | trans_total_amount | approved_total_amount |
+----------+---------+-------------+----------------+--------------------+-----------------------+
| 2018-12  | US      | 2           | 1              | 3000               | 1000                  |
| 2019-01  | US      | 1           | 1              | 2000               | 2000                  |
| 2019-01  | DE      | 1           | 1              | 2000               | 2000                  |
+----------+---------+-------------+----------------+--------------------+-----------------------+

sol:


# Write your MySQL query statement below

-- select DATE_FORMAT(trans_date,  '%Y-%m') as month , country,
-- count(country) as trans_count ,
-- count(state) as approved_count,
-- sum(amount) as trans_total_amount,
-- FROM 
-- (select id,country, IF (state = "approved", 1, 0) as state, amount, trans_date
-- from Transactions) t1
-- GROUP BY month,country
-- ;
-- full join
-- (select DATE_FORMAT(trans_date,  '%Y-%m') as month ,id, country, sum(amount) as approved_total_amount 
-- from Transactions
-- where state = "approved"
-- GROUP BY month,country) as apppro
-- on
-- firsttable.month = apppro.month
-- and 
-- firsttable.country = apppro.country


-- (select DATE_FORMAT(trans_date,  '%Y-%m') as month ,id, country, sum(amount) as approved_total_amount 
-- from Transactions
-- where state = "approved"
-- GROUP BY month,country) as apppro;



-- (select id,country, IF (state = "approved", 1, 0) as state, amount, trans_date
-- from Transactions) t1


select DATE_FORMAT(trans_date, "%Y-%m") month, country,
COUNT(id) as trans_count,
SUM(case when state = 'approved' then 1 else 0 end) as approved_count,
SUM(amount) as trans_total_amount,
SUM(case when state = 'approved' then amount else 0 end) as approved_total_amount
from Transactions
group by month, country
;

